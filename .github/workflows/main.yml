name: Lint Code

on:
  push:
    branches: [feature/review-system]
  pull_request:
    branches: [feature/review-system]

jobs:
  # ───────────────────────────────────────────
  # 1) LINT PYTHON
  # ───────────────────────────────────────────
  lint_python:
    name: Lint Python Files
    runs-on: ubuntu-latest

    steps:
      # 1.1 Clona el repo
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 1.2 Prepara Python 3.12
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # 1.3 Instala flake8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      # 1.4 Ejecuta flake8 en TODO el repo (excluye la carpeta node_modules si existiera)
      - name: Run flake8
        run: |
          echo "Running flake8…"
          find . -path "./server/frontend/node_modules" -prune -o -name "*.py" -exec flake8 {} +
          echo "✅ Python lint passed"

  # ───────────────────────────────────────────
  # 2) LINT JAVASCRIPT / JSX
  # ───────────────────────────────────────────
  lint_js:
    name: Lint JavaScript Files
    runs-on: ubuntu-latest

    steps:
      # 2.1 Clona el repo
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2.2 Prepara Node 14 (puedes subir a 18 o 20 si lo prefieres)
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      # 2.3 Instala JSHint globalmente
      - name: Install JSHint
        run: npm install --global jshint

      # 2.4 Ejecuta JSHint sobre todo tu frontend (evita node_modules)
      - name: Run JSHint
        run: |
          echo "Running JSHint…"
          find ./server/frontend \( -path "./server/frontend/node_modules" -prune \) -o -name "*.js" -o -name "*.jsx" -exec jshint {} +
          echo "✅ JavaScript lint passed" 
